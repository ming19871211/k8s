---
# Source: kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana
  labels:
    app: kibana
    chart: "kibana-2.2.0"
    release: kibana
    heritage: Tiller
data:
  kibana.yml: |
    elasticsearch.url: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
    
---
# Source: kibana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-test
  labels:
    app: kibana
    chart: "kibana-2.2.0"
    heritage: "Tiller"
    release: "kibana"
data:
  run.sh: |-
    @test "Test Status" {
      url="http://kibana:443/api/status"

      # retry for 1 minute
      run curl -s -o /dev/null -I -w "%{http_code}" --retry 30 --retry-delay 2 $url

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      body=$(curl $url)
      if [ "$code" == "503" ]
      then
        skip "Kibana Unavailable (503), can't get status - see pod logs: $body"
      fi

      result=$(echo $body | jq -cr '.status.statuses[]')
      [ "$result" != "" ]

      result=$(echo $body | jq -cr '.status.statuses[] | select(.state != "green")')
      [ "$result" == "" ]
    }

---
# Source: kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-2.2.0
    release: kibana
    heritage: Tiller
  name: kibana
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5601
      protocol: TCP

  selector:
    app: kibana
    release: kibana

---
# Source: kibana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: kibana-test
  labels:
    app: kibana
    chart: "kibana-2.2.0"
    heritage: "Tiller"
    release: "kibana"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: test-framework
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: kibana-test
      image: "dwdraju/alpine-curl-jq"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
  - name: tests
    configMap:
      name: kibana-test
  - name: tools
    emptyDir: {}
  restartPolicy: Never

---
# Source: kibana/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: "kibana-2.2.0"
    heritage: Tiller
    release: kibana
  name: kibana
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: a7b067328950540f8f35a50d013da5231c19578caaf855c87f17ea57afbc41a6
      labels:
        app: kibana
        release: "kibana"
    spec:
      serviceAccountName: default
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.7.0"
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources:
          {}
          
        volumeMounts:
        - name: kibana
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: kibana.yml
      tolerations:
        []
        
      volumes:
        - name: kibana
          configMap:
            name: kibana
